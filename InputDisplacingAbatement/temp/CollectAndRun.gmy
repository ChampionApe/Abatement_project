$ONEOLCOM
$EOLCOM #


# Root File for model
OPTION SYSOUT=OFF, SOLPRINT=OFF, LIMROW=0, LIMCOL=0, DECIMALS=6;
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_CollectFile.gms
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_functions.gms
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------
#  Define function: load_level
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: load_fixed
# ----------------------------------------------------------------------------------------------------


;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_sets.gms
# ----------------------------------------------------------------------------------------------------

sets
	alias_set
	alias_map2
	n
;

alias(n,nn,nnn);

sets
	input_FG[n]
	a_FG[n]
	alias_[alias_set,alias_map2]
	map_FG[n,nn]
	sector_FG[n]
	output_FG[n]
;
$GDXIN %FG%
$onMulti
$load alias_set
$load alias_map2
$load n
$load sector_FG
$load output_FG
$load input_FG
$load a_FG
$load alias_
$load map_FG
$GDXIN
$offMulti
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_parameters.gms
# ----------------------------------------------------------------------------------------------------

;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_groups.gms
# ----------------------------------------------------------------------------------------------------


# -----------------------------------------------FG_tech----------------------------------------------
#  Initialize FG_tech group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE sigma[n] "";
sigma.L[n]$((a_FG[n])) = 0;
VARIABLE mu[n,nn] "";
mu.L[n,nn]$((map_FG[n,nn])) = 0;
$onlisting


# -----------------------------------------------FG_exo-----------------------------------------------
#  Initialize FG_exo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE p[n] "";
p.L[n]$((input_FG[n])) = 0;
VARIABLE q[n] "";
q.L[n]$((output_FG[n])) = 0;
$onlisting


# -----------------------------------------------FG_endo----------------------------------------------
#  Initialize FG_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_p[n] "";
    load_p[n]$(((a_FG[n]))) = 0;
  
    parameter load_q[n] "";
    load_q[n]$(((sector_FG[n] and not output_FG[n]))) = 0;
  
  execute_load "%FG%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_p=p.l  load_q=q.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    p.l[n]$(((a_FG[n]))) = load_p[n];
  
    q.l[n]$(((sector_FG[n] and not output_FG[n]))) = load_q[n];
$onlisting
;
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_sigma[n] "";
    load_sigma[n]$(((a_FG[n]))) = 0;
  
    parameter load_mu[n,nn] "";
    load_mu[n,nn]$(((map_FG[n,nn]))) = 0;
  
  execute_load "%FG%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_sigma=sigma.l  load_mu=mu.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    sigma.fx[n]$(((a_FG[n]))) = load_sigma[n];
  
    mu.fx[n,nn]$(((map_FG[n,nn]))) = load_mu[n,nn];
$onlisting
;
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_p[n] "";
    load_p[n]$(((input_FG[n]))) = 0;
  
    parameter load_q[n] "";
    load_q[n]$(((output_FG[n]))) = 0;
  
  execute_load "%FG%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_p=p.l  load_q=q.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    p.fx[n]$(((input_FG[n]))) = load_p[n];
  
    q.fx[n]$(((output_FG[n]))) = load_q[n];
$onlisting
;
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\FG_blocks.gms
# ----------------------------------------------------------------------------------------------------



# ------------------------------------------------M_FG------------------------------------------------
#  Initialize M_FG equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_FG_q[n];
E_FG_q[n]$((sector_fg[n] and not output_fg[n])).. 	q[n]  =E=  sum(nn$(map_FG[n,nn]), mu[n,nn]*(p[n]/p[nn])**(-sigma[nn])*q[nn]);
EQUATION E_FG_p[n];
E_FG_p[n]$((a_fg[n])).. 	p[n]  =E=  sum(nn$(map_FG[nn,n]), mu[nn,n] * p[nn]**(1-sigma[n]))**(1/(1-sigma[n]));

# ----------------------------------------------------------------------------------------------------
#  Define M_FG model
# ----------------------------------------------------------------------------------------------------
Model M_FG /
E_FG_q, E_FG_p
/;


;
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_CollectFile.gms
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_functions.gms
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------
#  Define function: load_level
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: load_fixed
# ----------------------------------------------------------------------------------------------------


;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_sets.gms
# ----------------------------------------------------------------------------------------------------

sets
	alias_set
	alias_map2
	n
;

alias(n,nn,nnn);

sets
	input_ES[n]
	sector_ES[n]
	map_ES[n,nn]
	output_ES[n]
	alias_[alias_set,alias_map2]
	a_ES[n]
;
$GDXIN %ES%
$onMulti
$load alias_set
$load alias_map2
$load n
$load sector_ES
$load output_ES
$load a_ES
$load input_ES
$load alias_
$load map_ES
$GDXIN
$offMulti
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_parameters.gms
# ----------------------------------------------------------------------------------------------------

;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_groups.gms
# ----------------------------------------------------------------------------------------------------


# -----------------------------------------------ES_tech----------------------------------------------
#  Initialize ES_tech group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting


# -----------------------------------------------ES_exo-----------------------------------------------
#  Initialize ES_exo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting


# -----------------------------------------------ES_endo----------------------------------------------
#  Initialize ES_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_p[n] "";
    load_p[n]$(((a_ES[n]))) = 0;
  
    parameter load_q[n] "";
    load_q[n]$(((sector_ES[n] and not output_ES[n]))) = 0;
  
  execute_load "%ES%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_p=p.l  load_q=q.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    p.l[n]$(((a_ES[n]))) = load_p[n];
  
    q.l[n]$(((sector_ES[n] and not output_ES[n]))) = load_q[n];
$onlisting
;
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_sigma[n] "";
    load_sigma[n]$(((a_ES[n]))) = 0;
  
    parameter load_mu[n,nn] "";
    load_mu[n,nn]$(((map_ES[n,nn]))) = 0;
  
  execute_load "%ES%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_sigma=sigma.l  load_mu=mu.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    sigma.fx[n]$(((a_ES[n]))) = load_sigma[n];
  
    mu.fx[n,nn]$(((map_ES[n,nn]))) = load_mu[n,nn];
$onlisting
;
$offlisting
  
# --------------------------------------------__load_group--------------------------------------------
#  Initialize __load_group group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    parameter load_p[n] "";
    load_p[n]$(((input_ES[n]))) = 0;
  
    parameter load_q[n] "";
    load_q[n]$(((output_ES[n]))) = 0;
  
  execute_load "%ES%" 
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------
 load_p=p.l  load_q=q.l ;
  
# ----------------------------------------------------------------------------------------------------
#  Loop over __load_group
# ----------------------------------------------------------------------------------------------------

    p.fx[n]$(((input_ES[n]))) = load_p[n];
  
    q.fx[n]$(((output_ES[n]))) = load_q[n];
$onlisting
;
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\ES_blocks.gms
# ----------------------------------------------------------------------------------------------------



# ------------------------------------------------M_ES------------------------------------------------
#  Initialize M_ES equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_ES_q[n];
E_ES_q[n]$((sector_es[n] and not output_es[n])).. 	q[n]  =E=  sum(nn$(map_ES[n,nn]), mu[n,nn]*(p[n]/p[nn])**(-sigma[nn])*q[nn]/sum(nnn$(map_ES[nnn,nn]), mu[nnn,nn]*(p[nnn]/p[nn])**(-sigma[nn])));
EQUATION E_ES_p[n];
E_ES_p[n]$((a_es[n])).. 	p[n]  =E=  sum(nn$(map_ES[nn,n]), q[nn]*p[nn])/q[n];

# ----------------------------------------------------------------------------------------------------
#  Define M_ES model
# ----------------------------------------------------------------------------------------------------
Model M_ES /
E_ES_q, E_ES_p
/;


;
;

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\sxj477\Documents\GitHub\Abatement_project\InputDisplacingAbatement\workfolder\RunFile.gms
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------$FIX FG_tech, FG_exo, ES_tech, ES_exo;
# ----------------------------------------------------------------------------------------------------
$offlisting
sigma.FX[n]$(((a_ES[n])) or ((a_FG[n]))) = sigma.L[n];
mu.FX[n,nn]$(((map_ES[n,nn])) or ((map_FG[n,nn]))) = mu.L[n,nn];
p.FX[n]$(((input_ES[n])) or ((input_FG[n]))) = p.L[n];
q.FX[n]$(((output_ES[n])) or ((output_FG[n]))) = q.L[n];
$onlisting


# ----------------------------------------------------------------------------------------------------$UNFIX FG_endo, ES_endo;
# ----------------------------------------------------------------------------------------------------
$offlisting
p.lo[n]$(((a_ES[n])) or ((a_FG[n]))) = -inf;
p.up[n]$(((a_ES[n])) or ((a_FG[n]))) = inf;
q.lo[n]$(((sector_ES[n] and not output_ES[n])) or ((sector_FG[n] and not output_FG[n]))) = -inf;
q.up[n]$(((sector_ES[n] and not output_ES[n])) or ((sector_FG[n] and not output_FG[n]))) = inf;
$onlisting


# ----------------------------------------------------------------------------------------------------
#  Define FG_ES model
# ----------------------------------------------------------------------------------------------------
Model FG_ES /
E_FG_q, E_FG_p, E_ES_q, E_ES_p
/;


solve FG_ES using CNS;
;
